apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "roclub-connector-provisioning.fullname" . }}
  labels:
    {{- include "roclub-connector-provisioning.labels" . | nindent 4 }}
data:
  config.toml: |-
    [app]
    port = {{ .Values.frontend.config.app.port }}
    environment = "{{ .Values.frontend.config.app.environment }}"
    backend_url = "{{ .Values.frontend.config.app.backendUrl }}"

    [kafka]
    bootstrap_servers = {{ .Values.backend.config.kafka.bootstrapServers }}
    sasl_username = "{{ .Values.backend.config.kafka.saslUsername }}"
    sasl_password = "{{ .Values.backend.config.kafka.saslPassword }}"
    subscription_topics = {{ .Values.backend.config.kafka.subscriptionTopics }}
    client_id = "{{ .Values.backend.config.kafka.clientID }}"
    group_id = "{{ .Values.backend.config.kafka.groupID }}"
    auto_offset_reset = "{{ .Values.backend.config.kafka.autoOffsetReset }}"
    enable_auto_commit = "{{ .Values.backend.config.kafka.enableAutoCommit }}"
    security_protocol = "{{ .Values.backend.config.kafka.securityProtocol }}"
    sasl_mechanisms = "{{ .Values.backend.config.kafka.saslMechanisms }}"
    poll_interval = "{{ .Values.backend.config.kafka.pollInterval }}"

    [mongodb]
    connection_string = "{{ .Values.backend.config.mongodb.connectionString }}"
    database = "{{ .Values.backend.config.mongodb.database }}"
    collection = "{{ .Values.backend.config.mongodb.collection }}"

    [azure]
    client_id = "{{ .Values.backend.config.azure.clientID }}"
    tenant_id = "{{ .Values.backend.config.azure.tenantID }}"
    app_scope = "{{ .Values.backend.config.azure.appScope }}"

    [logger]
    level = "{{ .Values.config.logger }}"

# bootstrap_serversNew = [{{- range .Values.backend.config.kafka.bootstrapServers }}"{{ . }}",{{- end }}]