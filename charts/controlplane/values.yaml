nameOverride: ""
fullnameOverride: ""

stage: "dev"
recordNames:
  - controlplane.dev.roclub.io
  - cp.dev.roclub.io


conferenceWebsocket:
  image:
    repository: ghcr.io/roclub/conference-websocket-prod
    pullPolicy: Always

  imagePullSecrets:
    - name: dockerconfigjson-github-com

  replicaCount: 1

  service:
    type: ClusterIP
    port: 8080

  resources: {}

  nodeSelector: {}
  tolerations: []
  affinity: {}

  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: "conference-websocket"

  gatewayAPI:
    hosts:
      - paths:
          - path: /v2/websocket/
            pathType: PathPrefix

  env:
    - name: TOKEN
      value: ""
    - name: ALLOWED_ORIGIN
      value: ""

remoteControl:
  image:
    repository: ghcr.io/roclub/controlplane-session-control
    pullPolicy: Always

  imagePullSecrets: 
    - name: dockerconfigjson-github-com

  replicaCount: 1

  config:
    iotDataplane:
      key: ""
      secret: ""

    liveKit:
      key: ""
      secret: ""
      host: ""
      ttl: 300

    logger: "debug"

  service:
    type: ClusterIP
    httpPort: 8081
    gRPCPort: 8080

  gatewayAPI:
    hosts:
      - paths:
          - path: /v2/sessions/
            pathType: PathPrefix

  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: "remote-control"

  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  volumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

connectorStatus:
  image:
    repository: ghcr.io/roclub/controlplane-connector-status
    pullPolicy: Always

  imagePullSecrets: 
    - name: dockerconfigjson-github-com

  replicaCount: 1

  config:
    kafka:
      bootstrapServers: []
      saslUsername: ""
      saslPassword: ""

    influx:
      org: "roclub"
      token: ""

    logger: "debug"

  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: "connector-status"

  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    httpPort: 8081
    gRPCPort: 8080

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  volumeMounts: []

  nodeSelector: {}

  tolerations: []
  
  gatewayAPI:
    hosts:
      - paths:
          - path: /v2/connectors/status/
            pathType: PathPrefix

connectorControl:
  image:
    repository: ghcr.io/roclub/controlplane-connector-control
    pullPolicy: Always

  imagePullSecrets: 
    - name: dockerconfigjson-github-com

  replicaCount: 1

  config:
    iotDataplane:
      key: ""
      secret: ""

    logger: "debug"

  gatewayAPI:
    hosts:
      - paths:
          - path: /v2/connectors/control/
            pathType: PathPrefix

  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: "connector-control"

  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    httpPort: 8081
    gRPCPort: 8080

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  volumeMounts: []
  nodeSelector: {}
  tolerations: []

authZ:
  image:
    repository: ghcr.io/roclub/controlplane-authz
    pullPolicy: Always

  imagePullSecrets: 
    - name: dockerconfigjson-github-com

  replicaCount: 1

  config:
    openfga:
      url: "http://openfga-dev.openfga.svc.cluster.local:8080"
      storeId: "01J7B5WBSF3VHP1D0S5JV5Q1JY"
      modelId: "01J7BE0N8AQ9XST88B4XXT7KJT"

    logger: "debug"

  service:
    type: ClusterIP
    httpPort: 8081
    gRPCPort: 8080

  gatewayAPI:
    hosts:
      - paths:
          - path: /v2/authz/
            pathType: PathPrefix

  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: "authz"

  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  volumeMounts: []

  nodeSelector: {}

  tolerations: []
  affinity: {}

influxdb2:
  enabled: true

  adminUser:
    organization: "roclub"
    bucket: "connector-status"
    user: "admin"
    retention_policy: "0s"

  persistence:
    enabled: false
    storageClass: "gp3"
    accessMode: ReadWriteOnce
    size: 50Gi
    mountPath: /var/lib/influxdb2
    subPath: ""
