apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ .Values.iotKafkaInterfaceCronjob.name }}"
  namespace: "{{ .Values.iotKafkaInterfaceCronjob.namespace }}"
spec:
  schedule: "{{ .Values.iotKafkaInterfaceCronjob.schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                    - arm64
          serviceAccountName: aws-interface-sa
          containers:
          - name: {{ .Chart.Name }}
            image: "{{ .Values.iotKafkaInterfaceCronjob.container.image }}"
            imagePullPolicy: "{{ .Values.iotKafkaInterfaceCronjob.container.imagePullPolicy }}"
            env:
              - name: AWS_REGION
                value: "eu-central-1"
          {{- with .Values.notifications.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          imagePullSecrets:
            - name: "{{ .Values.iotKafkaInterfaceCronjob.imagePullSecrets }}"
          restartPolicy: "{{ .Values.iotKafkaInterfaceCronjob.restartPolicy }}"